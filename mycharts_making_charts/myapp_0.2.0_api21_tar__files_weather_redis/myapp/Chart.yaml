apiVersion: v2



# This is the version number of the application being deployed. This version number should be
# incremented each time you make changes to the application. Versions are not expected to
# follow Semantic Versioning. They should reflect the version the application is using.
# It is recommended to use it with quotes.
appVersion: "2.1.0"
# the appVersion will be referenced as .Chart.AppVersion in deployment.yaml file as the default image tag so that the 
# correct image can be pulled, in this case afakharany/hellonodejs:2.0.0. This image is in the values.yaml file
# the 2.1.0 appVersion is for the additon of the redis child chart to the helm app



# the dependencies block is for the redis server that will provide caching for API calls.
# need to specify the version of the redis server
# ^15.x is greater than or equal to 15.0.0 and less than 16.0.0
# I am not sure if this is still available. Try it out. If not use the version 16 as shown in 
# helm search repo "redis" --versions    version: ~15.3.x will cover 15.3.0  and less than 15.4.0
# right now 16.11.2 through 16.13.2 are in the repo.
# ITERATION 1
dependencies:
  - name: redis
    #version: ^15.x
    version: 16.13.2
    repository: https://charts.bitnami.com/bitnami
    import-values:
      - child: master
        parent: imported
  - name: libpolicy
    version: 0.1.0
    repository: file://../libpolicy

# ITERATION 2:
# imported can be used as a key into accessing child (redis) properties and configuration
# we can access the configurations and display in NOTES.txt file
# dependencies:
# - import-values:
#   - child: master
#     parent: imported
#   name: redis
#   repository: https://charts.bitnami.com/bitnami
#   version: ^15.x

description: A weather application written for NodeJS, now with redis caching for the backend API calls



name: myapp




# A chart can be either an 'application' or a 'library' chart.
#
# Application charts are a collection of templates that can be packaged into versioned archives
# to be deployed.
#
# Library charts provide useful utilities or functions for the chart developer. They're included as
# a dependency of application charts to inject those utilities and functions into the rendering
# pipeline. Library charts do not define any templates and therefore cannot be deployed.  
type: application



# This is the chart version. This version number should be incremented each time you make changes
# to the chart and its templates, including the app version.
# Versions are expected to follow Semantic Versioning (https://semver.org/)
# The appVersion has changed to 2.0.0 for this weather api modification and so the chart version should incremment from 
# 0.1.0 to 0.1.1  
# 0.2.0 is the chart version with redis child chart
version: 0.2.0
