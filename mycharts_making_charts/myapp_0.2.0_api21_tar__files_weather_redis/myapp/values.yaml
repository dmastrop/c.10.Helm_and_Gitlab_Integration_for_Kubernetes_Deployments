# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
#Values:
#    fullnameOverride: ""
#Chart:
#    Name: "myapp"
#Release:
#    Name: "myapp01"

image:
  # this is the .Values.image.repository in the deployment.yaml file.  The image tag will be supplied from the Chart.yaml 
  # as the appVersion if it is not present. This will allow the pulling of the proper image. In this case 1.0.0
  repository: afakharany/hellonodejs
  #comment out the pullPolicy as we are now using custom named template in _helpers.tpl file
  #pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

  # environment is production or development. This is used in the imagePullPolicy custom named teplate in _helpers.tpl file
  environment: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # see the _helpers.tpl serviceAcountName block.
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  #type: LoadBalancer
  #type: ClusterIP

  # port: 80
  # ssl_port: 443
  # ssl_target_port: 443
  # ssl_name: https

  # Create a list for multi-port service configuration
  # this simplifies configuration so that we no longer have to prefix the parameters to make them unique.
  ports:
    - number: 80
      targetPort: http
      name: http
    - number: 443
      targetPort: https
      name: https
    - number: 8080
      targetPort: 8080
      name: admin
    - number: 8008
      targetPort: 8008
      name: ops

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# this next block is to disable authentication from the parent myapp to the newly added redis pod
# In development this is ok. In production authentication should be disabled
redis:
  auth:
    enabled: false
